package LocationPackage;

message GpsData {
	required uint64 timestamp = 1;
	required double latitude = 2;
	required double longitude = 3;
	required double altitude = 4;
	required float speed = 5;
	required float bearing = 6;

	optional uint32 position_source = 7;
	optional uint32 flags = 8;
	optional double preShiftLongitude = 9;
	optional double preShiftLatitude = 10;
	optional float accuracy = 11;
	optional float vAccuracy = 12;
	optional float sAccuracy = 13;
	optional float bAccuracy = 14;
	optional uint64 ppstimestamp = 15;
	optional uint32 fixType = 16;
	optional float HDOP = 17;
	optional float VDOP = 18;
	optional float PDOP = 19;
	optional float smin = 20;
	optional float smaj = 21;
	optional float majaa = 22;
	optional uint32 noOfSatellites = 23;
	optional uint32 gpsSVC = 24;
	optional uint32 glonassSVC = 25;
	optional uint32 galileoSVC = 26;
	optional float gpsCNO = 27;
	optional float glonassCNO = 28;
	optional float galileoCNO = 29;
	optional float gpsL5CNO = 30;
	optional float bearingAvg = 31;
	optional int32 lat_delta_velocity = 32;
	optional int32 long_delta_velocity = 33;
	optional uint64 collisionUTCtime = 34;
	optional int32 secondary_collision_detection = 35;	
	optional uint32 compass_direction = 36;
	optional float vEast = 37;
	optional float vNorth = 38;
	optional float vUp = 39;
	optional uint32 sbas_status = 40;
	optional int32 elevation_angle = 41;
	optional uint32 fresh_data_counter = 42;
    optional double xAccel = 43;
    optional double yAccel = 44;
    optional double zAccel = 45;
    optional double xAngRate = 46;
    optional double yAngRate = 47;
    optional double zAngRate = 48;
    optional double curvature = 49;
    optional bool xAccelConfidence = 50;
    optional bool yAccelConfidence = 51;
    optional bool zAccelConfidence = 52;
    optional bool xAngRateConfidence = 53;
    optional bool yAngRateConfidence = 54;
    optional bool zAngRateConfidence = 55;
    optional bool curvatureConfidence = 56;
    optional bool calibrated = 57;
}
